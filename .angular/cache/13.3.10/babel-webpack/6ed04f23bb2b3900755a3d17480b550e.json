{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../pc-serve.service\";\nimport * as i2 from \"../nav-bar/nav-bar.component\";\nimport * as i3 from \"@angular/common\";\n\nfunction CarteGraphiqueComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const e_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"marque: \", e_r1.marque, \" ;\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"modele: \", e_r1.modele, \" ;\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"score: \", e_r1.score, \" ;\");\n  }\n}\n\nexport let CarteGraphiqueComponent = /*#__PURE__*/(() => {\n  class CarteGraphiqueComponent {\n    constructor(pcService) {\n      this.pcService = pcService; //recuperer la liste des CG carte graphique et les pc dans le json\n\n      this.cgListe = [];\n      this.pcListe = [];\n    }\n\n    ngOnInit() {\n      // permet de recupere les pcs\n      this.pcService.getPc().subscribe(fullData => {\n        this.pcListe = fullData; // permet de recupere les CG carte graphique\n        //ajouter un CG carte graphique dans la liste des CG carte graphique qui se trouve dans la liste des pc\n\n        let flag = false; //on cree une variable flag pour savoir si le CG carte graphique est deja dans la liste des CG carte graphique\n\n        for (let e of this.pcListe) {\n          //on parcours la liste des pc\n          for (let i of this.cgListe) {\n            //on parcours la liste des CG carte graphique\n            if (e.system.cg.marque == i.marque && e.system.cg.modele == i.modele && e.system.cg.score == i.score) {\n              //on verifie si e a le meme marque et le meme modele et le meme score que i pour ne pas avoir de doublon\n              flag = true;\n            }\n          }\n\n          if (flag == false) {\n            //si flag est a false alors on ajoute le CG carte graphique dans la liste des CG carte graphique\n            this.cgListe.push(e.system.cg);\n          }\n\n          flag = false; //on remet flag a false pour le prochain pc\n        }\n      });\n    }\n\n  }\n\n  CarteGraphiqueComponent.ɵfac = function CarteGraphiqueComponent_Factory(t) {\n    return new (t || CarteGraphiqueComponent)(i0.ɵɵdirectiveInject(i1.PcServeService));\n  };\n\n  CarteGraphiqueComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CarteGraphiqueComponent,\n    selectors: [[\"app-carte-graphique\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"container\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function CarteGraphiqueComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-bar\");\n        i0.ɵɵelementStart(1, \"h4\");\n        i0.ɵɵtext(2, \"\\u2022 Cartes graphiques\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0);\n        i0.ɵɵtemplate(4, CarteGraphiqueComponent_div_4_Template, 7, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cgListe);\n      }\n    },\n    directives: [i2.NavBarComponent, i3.NgForOf],\n    styles: [\".container[_ngcontent-%COMP%]{position:relative;z-index:-1;display:flex;flex-flow:row wrap;justify-content:space-between;width:85%;margin-top:100px;margin-bottom:150px;padding:10px;background-color:#e6e6e6;filter:drop-shadow(4px 4px 3px #E0E0E0)}h4[_ngcontent-%COMP%]{margin-top:100px;margin-left:40px;margin-bottom:-60px}\"]\n  });\n  return CarteGraphiqueComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}